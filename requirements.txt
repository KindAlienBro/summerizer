Marks Eligibility Analyzer - Backend System Documentation
=======================================================

System Overview
--------------
The backend is a FastAPI application that processes PDF mark sheets, extracts student data, and performs eligibility analysis. It provides a REST API for the frontend to upload PDFs and receive analyzed results.

Technical Requirements
---------------------
1. Python 3.8+
2. FastAPI
3. PyMuPDF (fitz)
4. Pandas
5. NumPy
6. Uvicorn (for server)

Installation
------------
1. Create virtual environment:
   python -m venv venv
   source venv/bin/activate  # Linux/Mac
   venv\Scripts\activate     # Windows

2. Install dependencies:
   pip install fastapi uvicorn pandas pymupdf numpy

API Endpoints
------------
1. POST /summarize-marks/
   - Accepts: PDF file upload
   - Returns: JSON with analyzed data
   - Example curl:
     curl -X POST -F "file=@marks.pdf" http://localhost:8000/summarize-marks/

2. GET /health
   - Health check endpoint
   - Returns: {"status": "healthy"}

3. GET /docs
   - Auto-generated API documentation (Swagger UI)

PDF Format Requirements
----------------------
The backend expects PDFs with marks in this format:
1. Each student record should contain:
   - Serial number
   - USN (10-digit alphanumeric)
   - Theory marks (marked with "TH" or "Theory")
   - Practical marks (marked with "PR" or "Practical")

2. Example text pattern in PDF:
   1  USN12345678  85(Theory), 90(Practical)

Error Handling
-------------
The backend handles:
- Invalid PDF files (400 Bad Request)
- PDFs with no recognizable data (400 Bad Request)
- Server errors (500 Internal Server Error)

Logging
-------
The system logs to:
1. Console (DEBUG level)
2. Includes timestamps and error traces

Deployment
---------
1. Local development:
   uvicorn main:app --reload

2. Production:
   gunicorn -k uvicorn.workers.UvicornWorker -w 4 main:app

Environment Variables
--------------------
No environment variables currently required

Sample Response
---------------
{
  "processing_summary": {
    "total_records_processed": 50,
    "pass_threshold_theory": 10,
    "pass_threshold_practical": 10
  },
  "overall_summary": {
    "passed_count": 45,
    "failed_count": 5,
    "pass_percentage": 90.0
  },
  "theory_stats": {
    "average": 65.5,
    "max": 98,
    "min": 5,
    "passed": 48
  },
  "practical_stats": {
    "average": 72.3,
    "max": 100,
    "min": 8,
    "passed": 47
  },
  "top_students": [...],
  "bottom_students": [...],
  "all_students": [...]
}

Maintenance
-----------
1. To modify parsing logic:
   - Update regex pattern in extract_marks_fitz()
   
2. To change pass thresholds:
   - Modify THEORY_PASS/PRACTICAL_PASS in analyze_marks()

Troubleshooting
--------------
1. No data extracted:
   - Check PDF text format matches expected pattern
   - Enable DEBUG logging

2. Installation issues:
   - Ensure Python 3.8+ is installed
   - Use --no-cache-dir with pip if needed

Version
-------
Current version: 1.0 (FastAPI + PyMuPDF)